body {
    background-color: #fff;
    color: #333;
    margin: 0;
    font: 1.2em / 1.2 Arial, Helvetica, sans-serif;
  }

  img {
      max-width: 100%;
      display: block;
  }
  
  .logo {
    font-size: 200%;
    padding: 50px 20px;
    margin: 0 auto;
    max-width: 980px;
  }
  
  .grid {
    margin: 0 auto;
    padding: 0 20px;
    max-width: 980px;
    display: grid; /* 将元素的显示类型设置为grid，即网格布局。这允许元素内部的子元素按照网格的模式排列。 */
    grid-template-columns: 3fr 1fr;    /* 定义网格的列模板。这里使用分数（fraction）单位fr来分配空间。3fr和1fr表示总共有4个分数单位，其中3个单位分配给第一列，1个单位分配给第二列。这会导致第一列比第二列宽三倍。 */
    gap: 20px;    /* 设置网格项目之间的间隙（gap）为20像素。这个属性在网格布局中用于控制网格行和列之间的空间。 */
  }
  
  nav {
    background-color: #000;
    padding: .5em;
    top: 0;  /* 设置导航栏的顶部位置为页面的顶部 */
    position: sticky; /* 这个属性使得<nav>元素在滚动时可以固定在视窗的顶部，实现“粘性”效果。 */
  }
  
  nav ul {
    margin: 0;
    padding: 0;
    list-style: none;
    display: flex; /* "flex"是"Flexible Box Layout"的缩写，即"弹性盒子布局"。这是一种用于在页面上排列元素的布局模型，它允许元素在容器内进行水平或垂直排列，并且可以灵活地调整元素的大小以适应不同的屏幕和设备。 */
    justify-content: space-between; /* 这是一个弹性盒子属性，用于在主轴上对齐项目。space-between值会使项目分散排列，第一个项目靠近容器的开始边缘，最后一个项目靠近容器的结束边缘，其他项目则均匀分布在它们之间。 */
  } 
  
  nav a {
    color: #fff;
    text-decoration: none;
    padding: .5em 1em;
  }
  
  .photos {
    list-style: none;
    margin: 0;
    padding: 0;
    display: grid;     /* 将元素的显示类型设置为grid，即网格布局。这允许元素内部的子元素按照网格的模式排列。 */
    gap: 1px;    /* 设置网格项目之间的间隙（gap）为1像素。这个属性在网格布局中用于控制网格行和列之间的空间。 */
    grid-template-columns: 1fr 1fr;    /* 定义网格的列模板。这里使用1fr（fraction单位，表示可用空间的一个分数）创建两列，每列占据相等的空间。 */
  }

  .feature {
      width: 200px;
      float: left;      /* 左浮动，实现文字包围图片 */
      margin: 0 20px 20px 0;      /* 设置图文距离 */
  }